
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	//Добавление записей в регистр накопления продажи об реализации абонентской платы
	Движения.Продажи.Записывать = Истина;
	//
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	//Корректировка заказов по абонентским платам
	
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Если ТекСтрокаУслуги.Номенклатура = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить() Тогда
			Движение = Движения.Продажи.Добавить();
			Движение.Контрагент = Контрагент;
			Движение.Номенклатура = ТекСтрокаУслуги.Номенклатура;
			Движение.Сумма = ТекСтрокаУслуги.Сумма;
			Движение.Период = Дата;
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла
	
	//
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ВыполнитьАвтозаполнение()Экспорт
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если  НЕ ЗначениеЗаполнено(НоменклатураАбонентскаяПлата)
		Или Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
			ОбщегоНазначения.СообщитьПользователю("Заполнение невозможно!
			|Не заполнены константы ""Номенклатура абонентская плата"" Или ""Номенклатура работы специалсита""");
			Возврат;
	КонецЕсли;
	
	Услуги.Очистить();
	
	АбонентскаяПлата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "СуммаЕжемесячнойАбонентскойПлаты");
	Если АбонентскаяПлата <> 0 Тогда
		СтрокаУслуга = Услуги.Добавить();
		СтрокаУслуга.Номенклатура = НоменклатураАбонентскаяПлата;
		
		Если Договор.ДействуетДо < КонецМесяца(Дата) Тогда
			СтрокаУслуга.Сумма = Договор.СуммаЕжемесячнойАбонентскойПлаты / ДЕНЬ(КонецМесяца(Дата)) * День(Договор.ДействуетДо);
		Иначе
			СтрокаУслуга.Сумма = Договор.СуммаЕжемесячнойАбонентскойПлаты;
		КонецЕсли;
		
		СтрокаУслуга.Сумма = АбонентскаяПлата;
	КонецЕсли;

	ВыполненныеКлиентуРаботы = РегистрыНакопления.ВКМ_ВыполненныеКлиентуРаботы.ЗапросВыполненныхРабот
		( Контрагент, Дата);
		
		
		
	Если ВыполненныеКлиентуРаботы.Следующий() Тогда
		СтрокаРаботы = Услуги.Добавить();
		СтрокаРаботы.Номенклатура = НоменклатураРаботыСпециалиста;
		СтрокаРаботы.Количество = ВыполненныеКлиентуРаботы.КоличествоЧасовОборот;
		СтрокаРаботы.Сумма = ВыполненныеКлиентуРаботы.СуммаКОплатеОборот;
		КонецЕсли;
		
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
